// Imports
"use strict";

var net = require("net");
var fs = require("fs");
var zlib = require("zlib");
var helpers = require("./helpers.js");
var child_process = require("child_process");

// Dockerode instantiation
var Docker = require("dockerode");
var docker = new Docker({ socketPath: "/var/run/docker.sock" });

module.exports = {
  listImages: function () {
    return new Promise(function (resolve, reject) {
      return docker.listImages({ all: false }, function (err, images) {
        if (err) {
          reject(err);
        } else {
          resolve(images);
        }
      });
    });
  },
  sendImage: function (imageHash, host) {
    var port = arguments[2] === undefined ? 1208 : arguments[2];
    return new Promise(function (resolve, reject) {
      var gzip = zlib.createGzip();
      var client = new net.Socket();
      client.connect(host, port, function () {
        var cmd = child_process.spawn("docker", ["save", imageHash]);

        cmd.stderr.on("data", function (data) {
          reject(data);
        });

        cmd.stdout.pipe(gzip).pipe(client);

        resolve(true);
      });

      client.on("error", function (err) {
        reject(err);
      });
    });
  }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jbGllbnQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsSUFBSSxHQUFHLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3pCLElBQUksRUFBRSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUN2QixJQUFJLElBQUksR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDM0IsSUFBSSxPQUFPLEdBQUcsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0FBQ3RDLElBQUksYUFBYSxHQUFHLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQzs7O0FBRzdDLElBQUksTUFBTSxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUNsQyxJQUFJLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBQyxFQUFDLFVBQVUsRUFBRSxzQkFBc0IsRUFBQyxDQUFDLENBQUM7O2lCQUUvQztBQUNiLFlBQVUsRUFBRTtXQUFNLElBQUksT0FBTyxDQUFDLFVBQUMsT0FBTyxFQUFFLE1BQU07YUFBSyxNQUFNLENBQUMsVUFBVSxDQUFDLEVBQUMsR0FBRyxFQUFFLEtBQUssRUFBQyxFQUFFLFVBQUMsR0FBRyxFQUFFLE1BQU0sRUFBSztBQUNsRyxZQUFJLEdBQUcsRUFBRTtBQUNQLGdCQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDYixNQUFNO0FBQ0wsaUJBQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUNqQjtPQUNGLENBQUM7S0FBQSxDQUFDO0dBQUE7QUFDSCxXQUFTLEVBQUUsVUFBQyxTQUFTLEVBQUUsSUFBSTtRQUFFLElBQUksZ0NBQUcsSUFBSTtXQUFLLElBQUksT0FBTyxDQUFDLFVBQUMsT0FBTyxFQUFFLE1BQU0sRUFBSztBQUM1RSxVQUFJLElBQUksR0FBRyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7QUFDN0IsVUFBSSxNQUFNLEdBQUcsSUFBSSxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUM7QUFDOUIsWUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLFlBQU07QUFDL0IsWUFBSSxHQUFHLEdBQUcsYUFBYSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQyxNQUFNLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQzs7QUFFN0QsV0FBRyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLFVBQUMsSUFBSSxFQUFLO0FBQzlCLGdCQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDZCxDQUFDLENBQUM7O0FBRUgsV0FBRyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDOztBQUVuQyxlQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7T0FDZixDQUFDLENBQUM7O0FBRUgsWUFBTSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsVUFBQyxHQUFHLEVBQUs7QUFDMUIsY0FBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO09BQ2IsQ0FBQyxDQUFDO0tBQ0osQ0FBQztHQUFBO0NBQ0giLCJmaWxlIjoic3JjL2NsaWVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbnZhciBuZXQgPSByZXF1aXJlKCduZXQnKTtcbnZhciBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG52YXIgemxpYiA9IHJlcXVpcmUoJ3psaWInKTtcbnZhciBoZWxwZXJzID0gcmVxdWlyZSgnLi9oZWxwZXJzLmpzJyk7XG52YXIgY2hpbGRfcHJvY2VzcyA9IHJlcXVpcmUoJ2NoaWxkX3Byb2Nlc3MnKTtcblxuLy8gRG9ja2Vyb2RlIGluc3RhbnRpYXRpb25cbnZhciBEb2NrZXIgPSByZXF1aXJlKCdkb2NrZXJvZGUnKTtcbnZhciBkb2NrZXIgPSBuZXcgRG9ja2VyKHtzb2NrZXRQYXRoOiAnL3Zhci9ydW4vZG9ja2VyLnNvY2snfSk7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbGlzdEltYWdlczogKCkgPT4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gZG9ja2VyLmxpc3RJbWFnZXMoe2FsbDogZmFsc2V9LCAoZXJyLCBpbWFnZXMpID0+IHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICByZWplY3QoZXJyKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzb2x2ZShpbWFnZXMpO1xuICAgIH1cbiAgfSkpLFxuICBzZW5kSW1hZ2U6IChpbWFnZUhhc2gsIGhvc3QsIHBvcnQgPSAxMjA4KSA9PiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgdmFyIGd6aXAgPSB6bGliLmNyZWF0ZUd6aXAoKTtcbiAgICB2YXIgY2xpZW50ID0gbmV3IG5ldC5Tb2NrZXQoKTtcbiAgICBjbGllbnQuY29ubmVjdChob3N0LCBwb3J0LCAoKSA9PiB7XG4gICAgICB2YXIgY21kID0gY2hpbGRfcHJvY2Vzcy5zcGF3bignZG9ja2VyJywgWydzYXZlJywgaW1hZ2VIYXNoXSk7XG5cbiAgICAgIGNtZC5zdGRlcnIub24oJ2RhdGEnLCAoZGF0YSkgPT4ge1xuICAgICAgICByZWplY3QoZGF0YSk7XG4gICAgICB9KTtcblxuICAgICAgY21kLnN0ZG91dC5waXBlKGd6aXApLnBpcGUoY2xpZW50KTtcblxuICAgICAgcmVzb2x2ZSh0cnVlKTtcbiAgICB9KTtcblxuICAgIGNsaWVudC5vbignZXJyb3InLCAoZXJyKSA9PiB7XG4gICAgICByZWplY3QoZXJyKTtcbiAgICB9KTtcbiAgfSlcbn1cbiJdfQ==